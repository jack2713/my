name: sync myb

# 触发条件
on:
  schedule:
    # 每天 UTC 时间 00:00 和 12:00 运行
    - cron: '0 */8 * * *'
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write  # 确保 GITHUB_TOKEN 具有写入权限

jobs:
  fetch_streams:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出项目仓库
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # 3. 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests

    # 5. 运行第一个 Python 脚本 (m3utotxtnew.py)
    - name: Run m3utotxtnew.py script
      run: |
        python TMP/m3utotxtnew.py

    # 6. 检查第一个脚本的输出文件
    - name: Check TMP1.txt file
      run: |
        if [ -f "TMP/TMP1.txt" ]; then
          echo "TMP1.txt exists"
          ls -la TMP/TMP1.txt
        else
          echo "TMP1.txt does not exist"
          ls -la TMP/
        fi

    # 7. 提交第一个脚本的结果
    - name: Commit TMP1.txt changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add $(pwd)/TMP/TMP1.txt
        git commit -m "Update TMP/TMP1.txt with m3utotxtnew.py results" || echo "No changes to TMP1.txt"
        git push origin HEAD:main

    # 8. 运行第二个 Python 脚本 (fetch_streams.py)
    - name: Run fetch_streams.py script
      run: |
        python fetch_streams.py

    # 10. 提交第二个脚本的结果
    - name: Commit myq.txt changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add $(pwd)/myq.txt
        git commit -m "Update myq.txt with fetch_streams.py results" || echo "No changes to myq.txt"
        git push origin HEAD:main

    # 11. 上传输出文件作为工件
    - name: Upload output files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: processed-files
        path: |
          myq.txt
          TMP/TMP1.txt
